{
  "name": "Zoxzuyu - Joomla-Toolkit-Library",
  "tagline": "",
  "body": "# Zoxzuyu-Joomla-Toolkit-Libray\r\n## Wofür ist ZJTK da?\r\nZJTK ist eine PHP-Bibliothek zur Unterstützung der Entwicklung von Joomla!-Templates. Sie ermöglicht einem innerhalb der Template-Definitionen auf den Alias des Artikels zuzugreifen. Dies ist zum Beispiel dann wünschenswert, wenn man unterschiedlichen Seiten unterschiedliche Farben zuweisen möchte. Weiterhin gibt es die Möglichkeit Präfixe und Suffixe (Sprachen) in CSS-Klassen umzuwandeln (Alias-Class-Umleitung). Dadurch ist es möglich mehreren Seiten eine Farbe zuzuweisen, ohne für jede Seite eine eigene Klasse einzubauen. Ebenso erhöht dies die Flexibilität und Wartbarkeit der Seite in puncto Seiten hinzufügen, löschen und die Farbe ändern.\r\n\r\nAllerdings muss man ebenfalls an die Suchmaschinenoptimierung (SEO) denken. Da Joomla! den Beitragsalias zur URL-Generierung verwendet, sollte dieser nicht genutzt werden. Darum nutzt ZJTK ein einfaches Prinzip. Wenn ein Menüalias vorhanden ist (wird nicht für URL-Generierung verwendet), wird dieser verwendet. Ansonsten wird der Beitragsalias genutzt. Der Menüalias ist normalerweise nur bei Kontakt-, Kategorie- und Startseiten nicht vorhanden.\r\n## Wie benutzt man ZJTK\r\nDie folgenden zwei Abschnitte treffen nur zu, wenn man die Alias-Class-Umleitung nutzen will. Wenn du nur den Alias ausgeben willst, springe direkt zu dem Abschnitt \"Manipulationen im PHP-Bereich der Template-Datei\". Bevor einzelne Details und Code-Schnipsel gezeigt werden sollen, wird erst noch das Prinzip der Alias-Class-Umleitung erläutert.\r\n### Die Alias-Class-Umleitung\r\nEin Alias, der in eine Klasse umgewandelt werden soll, muss bestimmten Kriterien entsprechen. Im folgenden ist das Token wiedergegeben, mit dem ein Alias identifiziert wird:\r\n```\r\n(<[$char$++] PREFIX><[$char$*1] PREFIX_DIVIDER>)<[$char$++] CUSTOM_ALIAS>(<[$char$*1] SUFFIX_DIVIDER><[$char$+] SUFFIX / LANGUAGE>)\r\n```\r\nIm folgenden wird eine Erklärung zu jedem Subtoken genannt.\r\n\r\nSubtoken | Erklärung\r\n------------- | -------------\r\n<[$char$++] PREFIX> | Mehrere Zeichen als Präfix, optional, nur wenn das auch Präfix-Divider\r\n<[$char$*1] PREFIX-DIVIDER> | Ein Zeichen um Präfix und Alias zu unterscheiden, konditional. Bsp.: \"-\" oder \"_\"\r\n<[$char$++] CUSTOM-ALIAS> | Ein eigener, obligatorischer Alias-Text\r\n<[$char$*1] SUFFIX-DIVIDER> | Ein Zeichen um Suffix und Alias zu unterscheiden, konditional. Bsp.: \"-\" oder \"_\"\r\n<[$char$++] SUFFFIX / LANGUAGE> | Mehrere Zeichen als SUFFIX / SPRACHE optional, nur wenn das auch Suffix-Divider\r\n\r\nIm Klartext heißt dies, dass folgende Aliase korrekt sind. (Präfix- und Suffixdivider aus Erklärungszwecken auf \"-\" gesetzt.)\r\n\r\n- prefix-alias-language\r\n- prefix-alias\r\n- alias-language\r\n- alias\r\n\r\n### Manipulation im Joomla! Backend\r\nÖffnen Sie die Menüs der zu bearbeitenden Joomla!-Seite. Gehen Sie zu jedem Artikel und ändern Sie den Alias nach dem oben genannten Schema ab. EINMAL FESTGELEGTE PRÄFIX-/SUFFIX-DIVIDER MÜSSEN BEI ALLEN ALIASEN BEIBEHALTEN WERDEN.\r\n### Manipulationen im PHP-Bereich der Template-Datei\r\nFügen Sie folgenden Zeile in den PHP-Abschnitt des Templates, indem Dateien eingebunden werden:\r\n```php\r\n@require_once(\"zjtk.php\") or die(\"DIE ZJTK.PHP-DATEI WURDE NICHT GEFUNDEN!!!\");\r\n```\r\nAnschließend fügen Sie nach dieser Zeile folgenden PHP-Code ein.\r\n```php\r\n$alias = new Alias();\r\n$alias->Config(\"prefixDivider\", \"<IHR PREFIX DIVIDER>\");\r\n$alias->Config(\"suffixDivider\", \"<IHR SUFFIX DIVIDER>\");\r\n```\r\nFügen Sie dann für jedes Präfix folgende Zeile direkt nach dem vorhergehenden Code ein.\r\n```php\r\n$alias->AddPrefix(\"<PRÄFIX>\", \"<PRÄFIX-ERSATZ (CSS-KLASSE)>\");\r\n```\r\nFügen Sie dann für jede Sprache folgende Zeile direkt nach dem vorhergehenden Code ein.\r\n```php\r\n$alias->AddLanguage(\"<SHORTCODE>\", \"<LONG REPLACEMENT (CSS-KLASSE)>\");\r\n```\r\n### Manipulationen im HTML-Bereich der Template-Datei\r\nEs gibt zwei Möglichkeiten den Alias auszulesen: Den originalen Alias und den Alias, der ebenfalls CSS-Klasse und Sprache enthält.\r\n```html\r\n<!-- Folgendes Tag enthält als Klasse den orignalen Alias. -->\r\n<tag class=\"<?php echo $alias->GetAlias();  ?>\">. . .</tag>\r\n<!-- Folgendes Tag enthält als Klasse den Alias mit Präfix und Sprace. -->\r\n<tag class=\"<?php echo $alias->GetPuredAlias();  ?>\">. . .</tag>\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}